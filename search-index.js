var searchIndex = JSON.parse('{\
"bench":{"doc":"","t":[5],"n":["main"],"q":["bench"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"build_leduc":{"doc":"","t":[0,5,3,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,11,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["leduc","rule","Leduc","actions","action_id","nodes","node_id","transition","observations","info_partition","info_set_id","info_set_details","State","history","bet","pot","hole_card","flop_card","last_player","node_id","build","observation","detail","transition","terminal_val","winner","possible_actions","main","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","clone_any","clone_any_send","clone_any_sync","clone_any_send_sync","clone","default","default","fmt"],"q":["build_leduc","build_leduc::leduc","","","","","","","","","","","","","","","","","","","","","","","","","","build_leduc","build_leduc::leduc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Get <code>Rule</code> of Leduc Hold’em","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2],"f":[null,[[],["rule",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["state",3],["player",4]],[["vec",3],["str",15]]],[[["player",4],["vec",3]],["string",3]],[[["state",3]],[["option",4],["vec",3]]],[[["state",3]],[["f64",15],["option",4]]],[[["char",15]],[["player",4],["option",4]]],[[["state",3]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["global",3],["cloneany",8],["box",3]]],[[],[["cloneany",8],["box",3],["global",3]]],[[],[["box",3],["global",3],["cloneany",8]]],[[],[["global",3],["box",3],["cloneany",8]]],[[],["state",3]],[[],["leduc",3]],[[],["state",3]],[[["formatter",3]],["result",6]]],"p":[[3,"Leduc"],[3,"State"]]},\
"cfr_rs":{"doc":"A rust implementation of Counterfacutual Regret …","t":[0,3,11,3,11,0,3,11,4,13,12,13,12,12,11,11,11,6,3,11,0,4,13,13,13,11,11,0,3,12,12,12,12,12,12,12,12,12,11,5,5,0,6,5,5,5,5,5,0,5,0,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["action","ActionId","new","Action","new","node","NodeId","new","Node","Terminal","value","NonTerminal","player","edges","value","player","edges","InformationSet","InformationSetId","new","player","Player","P1","P2","C","opponent","sign","rule","Rule","actions","nodes","root","info_partition","info_set_details","transition","info_set_id_by_node","actions_by_info_set","player_by_info_set","build","from_json","from_path","strategy","Strategy","new","uniform","from_json","from_path","to_string","cfr","calc_nash_strt","solver","calc_ev","calc_best_resp","calc_min_epsilon","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","clone_any","clone_any_send","clone_any_sync","clone_any_send_sync","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","clone_any","clone_any_send","clone_any_sync","clone_any_send_sync","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","clone_any","clone_any_send","clone_any_sync","clone_any_send_sync","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","clone_any","clone_any_send","clone_any_sync","clone_any_send_sync","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","clone_any","clone_any_send","clone_any_sync","clone_any_send_sync","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","clone_any","clone_any_send","clone_any_sync","clone_any_send_sync","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","clone","clone","clone","clone","clone","clone","default","default","cmp","cmp","cmp","cmp","cmp","eq","ne","eq","ne","eq","ne","eq","ne","eq","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","serialize","serialize","serialize","serialize","serialize","serialize","serialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize"],"q":["cfr_rs","cfr_rs::action","","","","cfr_rs","cfr_rs::node","","","","cfr_rs::node::Node","cfr_rs::node","cfr_rs::node::Node","","cfr_rs::node","","","","","","cfr_rs","cfr_rs::player","","","","","","cfr_rs","cfr_rs::rule","","","","","","","","","","","","","cfr_rs","cfr_rs::strategy","","","","","","cfr_rs","cfr_rs::cfr","cfr_rs","cfr_rs::solver","","","cfr_rs::action","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cfr_rs::node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cfr_rs::player","","","","","","","","","","","","","","","","","cfr_rs::rule","","","","","","","","","","","cfr_rs::action","","cfr_rs::node","","","cfr_rs::player","cfr_rs::node","cfr_rs::rule","cfr_rs::action","","cfr_rs::node","","cfr_rs::player","cfr_rs::action","","","","cfr_rs::node","","","","cfr_rs::player","cfr_rs::action","","cfr_rs::node","","cfr_rs::player","cfr_rs::action","","cfr_rs::node","","cfr_rs::player","cfr_rs::action","","cfr_rs::node","","","cfr_rs::player","cfr_rs::rule","cfr_rs::action","","cfr_rs::node","","","cfr_rs::player","cfr_rs::rule"],"d":["Representation of <em>actions</em>","","","","","Representation of <em>node</em>","","","","","","","","","","","","","","","Representation of <em>players</em>","","","","","","","Representation of <em>game rule</em>","","","","","","","","","","","Calculate values that are not needed for game definition …","Get the <code>Rule</code> from the JSON string","Get the <code>Rule</code> from the JSON file.","Representation of <em>strategy</em> (probability distribution for …","","Get the <code>Strategy</code> filled with zeros.","Get a uniform <code>Strategy</code> (taking actions with equal …","Get the <code>Strategy</code> from the JSON string","Get the <code>Strategy</code> from the JSON file.","","Provide CFR calculations.","Calculate an ε-Nash strategy","Provide basic calculations.","Calculate the expected value.","Calculate the optimal value of the expected value when …","Calculate minimum value of ε such that the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,0,2,0,0,3,0,4,5,4,6,6,4,4,4,0,0,7,0,0,8,8,8,8,8,0,0,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,1,2,3,4,7,8,3,9,1,2,3,7,8,1,1,2,2,3,3,7,7,8,1,2,3,7,8,1,2,3,7,8,1,2,3,4,7,8,9,1,2,3,4,7,8,9],"f":[null,null,[[["usize",15]]],null,[[["str",15]]],null,null,[[["usize",15]],["nodeid",3]],null,null,null,null,null,null,[[],["f64",15]],[[],["player",4]],[[],["btreemap",3]],null,null,[[["usize",15]]],null,null,null,null,null,[[],["player",4]],[[],["f64",15]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[["str",15]],["rule",3]],[[["str",15]],["rule",3]],null,null,[[["rule",3]],["strategy",6]],[[["rule",3]],["strategy",6]],[[["str",15]],["strategy",6]],[[["str",15]],["strategy",6]],[[["rule",3],["strategy",6]],["string",3]],null,[[["rule",3],["strategy",6],["usize",15]],["strategy",6]],null,[[["rule",3],["strategy",6]],["f64",15]],[[["rule",3],["strategy",6],["player",4]],["f64",15]],[[["rule",3],["strategy",6]],["f64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["box",3],["cloneany",8],["global",3]]],[[],[["cloneany",8],["global",3],["box",3]]],[[],[["box",3],["cloneany",8],["global",3]]],[[],[["box",3],["global",3],["cloneany",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["box",3],["cloneany",8],["global",3]]],[[],[["cloneany",8],["global",3],["box",3]]],[[],[["box",3],["cloneany",8],["global",3]]],[[],[["box",3],["global",3],["cloneany",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["box",3],["cloneany",8],["global",3]]],[[],[["cloneany",8],["global",3],["box",3]]],[[],[["box",3],["cloneany",8],["global",3]]],[[],[["box",3],["global",3],["cloneany",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["box",3],["cloneany",8],["global",3]]],[[],[["cloneany",8],["global",3],["box",3]]],[[],[["box",3],["cloneany",8],["global",3]]],[[],[["box",3],["global",3],["cloneany",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["box",3],["cloneany",8],["global",3]]],[[],[["cloneany",8],["global",3],["box",3]]],[[],[["box",3],["cloneany",8],["global",3]]],[[],[["box",3],["global",3],["cloneany",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["box",3],["cloneany",8],["global",3]]],[[],[["cloneany",8],["global",3],["box",3]]],[[],[["box",3],["cloneany",8],["global",3]]],[[],[["box",3],["global",3],["cloneany",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["actionid",3]],[[],["action",3]],[[],["nodeid",3]],[[],["node",4]],[[],["informationsetid",3]],[[],["player",4]],[[],["nodeid",3]],[[],["rule",3]],[[["actionid",3]],["ordering",4]],[[["action",3]],["ordering",4]],[[["nodeid",3]],["ordering",4]],[[["informationsetid",3]],["ordering",4]],[[["player",4]],["ordering",4]],[[["actionid",3]],["bool",15]],[[["actionid",3]],["bool",15]],[[["action",3]],["bool",15]],[[["action",3]],["bool",15]],[[["nodeid",3]],["bool",15]],[[["nodeid",3]],["bool",15]],[[["informationsetid",3]],["bool",15]],[[["informationsetid",3]],["bool",15]],[[["player",4]],["bool",15]],[[["actionid",3]],[["ordering",4],["option",4]]],[[["action",3]],[["ordering",4],["option",4]]],[[["nodeid",3]],[["ordering",4],["option",4]]],[[["informationsetid",3]],[["ordering",4],["option",4]]],[[["player",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]]],"p":[[3,"ActionId"],[3,"Action"],[3,"NodeId"],[4,"Node"],[13,"Terminal"],[13,"NonTerminal"],[3,"InformationSetId"],[4,"Player"],[3,"Rule"]]},\
"main":{"doc":"","t":[5,5],"n":["init_logger","main"],"q":["main",""],"d":["",""],"i":[0,0],"f":[[[]],[[]]],"p":[]}\
}');
initSearch(searchIndex);